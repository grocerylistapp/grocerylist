{"version":3,"sources":["../../src/pages/add-preferred-store/add-preferred-store.module.ts","../../src/pages/add-preferred-store/add-preferred-store.ts"],"names":[],"mappings":"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","file":"15.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddPreferredStorePage } from './add-preferred-store';\n\n@NgModule({\n  declarations: [\n    AddPreferredStorePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddPreferredStorePage),\n  ],\n})\nexport class AddPreferredStorePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-preferred-store/add-preferred-store.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\nimport { Network } from '@ionic-native/network';\nimport { FirebaseListObservable, AngularFireDatabase, FirebaseObjectObservable } from 'angularfire2/database';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\nimport { DataServiceProvider } from '../../providers/data-service/data-service';\nimport { User } from 'firebase/app';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Store } from '../../models/store/store';\n\n\ndeclare var google;\ndeclare var Connection;\n/**\n * Generated class for the AddPreferredStorePage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-add-preferred-store',\n  templateUrl: 'add-preferred-store.html',\n})\nexport class AddPreferredStorePage {\n\n  searchAddress: string = \"\";\n\tmap: any;\n  \tmapInitialised: boolean = false;\n  \tapiKey: any;\n    online: boolean;\n    isStorexists: boolean;\n  \tplaces: Array<any>; \n  \tautocompleteItems: any;\n\tautocomplete: any;\n\tacService:any;\n  public preferredStoresList: FirebaseListObservable<Store[]>;\n  private authenticatedUser : User;\n  private authenticatedUser$ : Subscription;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public geolocation: Geolocation,\n    private network: Network, private db: AngularFireDatabase, public alertCtrl: AlertController,\n    private auth: AuthServiceProvider, private data: DataServiceProvider) {\n\n      this.authenticatedUser$ = this.auth.getAuthenticatedUser().subscribe((user: User) => {\n        this.authenticatedUser = user;\n        this.preferredStoresList = this.db.list(`/preferredStores/${this.authenticatedUser.uid}`);\n        });\n      this.network.onConnect().subscribe(res=>{\n        this.online=true;\n        return this.online;\n    });\n\n    this.network.onDisconnect().subscribe(res=>{\n        this.online=false;\n        return this.online;\n    });\n    \n    \n    \n  }\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AddPreferredStorePage');\n  }\n\n  ngOnInit() {\n    \nthis.autocompleteItems = [];\nthis.autocomplete = {\nquery: ''\n};   \n\nthis.loadGoogleMaps();\n}\n\nloadGoogleMaps(){\n  \n       this.addConnectivityListeners();\n  \n       if(typeof google == \"undefined\" || typeof google.maps == \"undefined\"){\n  \n         console.log(\"Google maps JavaScript needs to be loaded.\");\n         this.disableMap();\n  \n        //  if(this.online || this.network.type !== Connection.NONE){\n             console.log(\"online, loading map\");\n  \n             //Load the SDK\n             window['mapInit'] = () => {\n           this.initMap();\n           this.enableMap();\n            }\n  \n             let script = document.createElement(\"script\");\n             script.id = \"googleMaps\";\n    \n             if(this.apiKey){\n           script.src = 'http://maps.google.com/maps/api/js?key=' + this.apiKey + '&callback=mapInit&libraries=places';\n             } else {\n           script.src = 'http://maps.google.com/maps/api/js?callback=mapInit&libraries=places';       \n             }\n  \n             document.body.appendChild(script);  \n  \n        //  } \n       }\n       else {\n        \n        //  if(this.online || this.network.type !== Connection.NONE){\n           console.log(\"showing map\");\n           this.initMap();\n           this.enableMap();\n        //  }\n        //  else {\n           console.log(\"disabling map\");\n           this.disableMap();\n        //  }\n  \n       }\n  \n     }\n \n     addMarker(){\n       \n       let marker = new google.maps.Marker({\n         map: this.map,\n         animation: google.maps.Animation.DROP,\n         position: this.map.getCenter()\n       });\n \n       \n \n   }\n \n     initMap(){\n  \n       this.mapInitialised = true;\n      \n       let options = {\n         enableHighAccuracy: true\n       };\n       \n       this.geolocation.getCurrentPosition(options).then((position: Geoposition) => {\n           let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n    \n         let mapOptions = {\n           center: latLng,\n           zoom: 15,\n           mapTypeId: google.maps.MapTypeId.ROADMAP\n         }\n       \n           //this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n           this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\n           this.getStores(latLng).then((results : Array<any>)=>{\n             this.places = results;\n             for(let i = 0 ;i < results.length ; i++)\n             {\n                 this.createMarker(results[i]);\n             }\n         },(status)=>console.log(status));\n \n         this.addMarker();\n       }).catch((err) => {\n           console.log('Error getting location'+ err.message);\n           let alert = this.alertCtrl.create({\n             message: err.message,\n             buttons: [\n               {\n                 text: \"Ok\",\n                 role: 'cancel',\n                 handler: () => {\n                   \n                 }\n               }\n             ]\n           });\n           alert.present();\n           this.map = new google.maps.Map(document.getElementById('map'), {\n             center: new google.maps.LatLng(0, 0),//{lat: -34.397, lng: 150.644},\n             zoom: 15,\n             mapTypeId: google.maps.MapTypeId.ROADMAP\n           });\n \n           \n       });\n      \n     }\n  \n     disableMap(){\n       console.log(\"disable map\");\n     }\n \n     enableMap(){\n       console.log(\"enable map\");\n       this.acService = new google.maps.places.AutocompleteService();\n     }\n \n     getStores(latLng) {\n       if(this.map !== undefined){\n          var service = new google.maps.places.PlacesService(this.map);\n       }\n        else{\n           var service = new google.maps.places.PlacesService(document.createElement('div'));\n        }\n       let request = {\n           location : latLng,\n           radius : 2000 ,//in metres\n           types: [\"store\"]//home_goods_store, shopping_mall, convenience_store\n       };\n       return new Promise((resolve,reject)=>{\n           service.nearbySearch(request,function(results,status){\n               if(status === google.maps.places.PlacesServiceStatus.OK) {\n                   resolve(results);    \n               }\n               else {\n                   reject(status);\n               }\n \n           }); \n       });\n \n   }\n     addConnectivityListeners(){\n  \n       let onOnline = () => {\n    \n           setTimeout(() => {\n         if(typeof google == \"undefined\" || typeof google.maps == \"undefined\"){\n             this.loadGoogleMaps();\n         } else {\n             if(!this.mapInitialised){\n               this.initMap();\n             }\n             this.enableMap();\n         }\n           }, 2000);\n    \n       };\n    \n       let onOffline = () => {\n         this.disableMap();\n       };\n    \n       document.addEventListener('online', onOnline, false);\n       document.addEventListener('offline', onOffline, false);\n   }\n \n   createMarker(place) {\n       let marker = new google.maps.Marker({\n         map: this.map,\n         animation: google.maps.Animation.DROP,\n         position: place.geometry.location\n       }); \n       \n       let content = \"<p>\"+place.name+\"</p>\";          \n       let infoWindow = new google.maps.InfoWindow({\n         content: content\n       });\n \n       google.maps.event.addListener(marker, 'click', () => {\n         infoWindow.open(this.map, marker);\n         this.addItemToPreferredStorelist(place);\n       });  \n   } \n \n   updateSearch() {\n     console.log('modal > updateSearch');\n     if (this.autocomplete.query == '') {\n       this.autocompleteItems = [];\n       return;\n     }\n     let self = this; \n     let config = { \n       types:  ['establishment'], // other types: 'geocode', 'regions', and 'cities'\n       input: self.autocomplete.query, \n       componentRestrictions: {  country: ['US', 'IN'] } \n     }\n     \n     var geocoder = new google.maps.Geocoder();\n \n     self.acService.getPlacePredictions(config, function (predictions, status) {\n       console.log('modal > getPlacePredictions > status > ', status);\n       if(status == 'ZERO_RESULTS'){\n \n           geocoder.geocode({address: self.autocomplete.query}, function(results, status) {\n              if (status == google.maps.GeocoderStatus.OK) {\n               //alert(\"got adrress loc\");//searchLocationsNear(results[0].geometry.location);\n              } else {\n               alert(self.autocomplete.query + ' not found');\n              }\n           });\n       }\n       else{\n         self.autocompleteItems = [];            \n         predictions.forEach(function (prediction) {              \n           self.autocompleteItems.push(prediction);\n         });\n       }\n       \n     });\n   }\n \n   chooseItem(item) {\n     this.autocomplete.query = item.description;\n     \n     this.addItemToPreferredStorelist(item);\n   }\n\n  \n   addItemToPreferredStorelist(item) {\n\n     var self = this;\n     if(item.place_id && item.place_id !== \"\"){\n       if(this.map === undefined){\n         var service = new google.maps.places.PlacesService(this.map);\n       }else{\n         var service = new google.maps.places.PlacesService(document.createElement('div'));\n       }\n       \n       service.getDetails({\n             placeId: item.place_id\n           }, function(place, status) {\n             if (status === google.maps.places.PlacesServiceStatus.OK) {\n              var self = this;\n              \n                  self.preferredStoresList = self.db.list(`/preferredStores/${self.authenticatedUser.uid}`);\n                  /* gets firebase data only once */\n                  self.preferredStoresList.$ref.once(\"value\", function (snapshot) {\n                    snapshot.forEach(data => {\n              \n                      if (data.val().lat === place.geometry.location.lat() && data.val().long === place.geometry.location.lng()) {\n                        self.isStorexists = true;\n                        // self.showToast('Item already exists in Master List', 1000);\n                        // self.loading.dismiss();\n                      }\n                      return false;\n                    });\n              \n                    if (!self.isStorexists) {\n                      let isSaved;\n                      isSaved = self.preferredStoresList.push({\n                                 storename: item.description,\n                                 lat: place.geometry.location.lat(),\n                                 long: place.geometry.location.lng()\n                               }).key;\n\n                               if (isSaved) {\n                                alert(\"Store saved\");\n                                \n                              }\n                    }\n                    else{\n                      alert(\"Store already exist\");\n                    }\n                    self.isStorexists = false;\n                    self.autocompleteItems = [];\n                  });\n                \n\n        //  var usersRef = firebase.database().ref('preferredStores'); \n        //    usersRef.orderByChild(\"uid\").equalTo(firebase.auth().currentUser.uid).once('value', function(snapshot) {\n        //        const userData = snapshot.val();\n        //        if (userData) {\n        //            var isStorexists: boolean = false;\n        //            Object.keys(userData).forEach(function(key) {\n        //            if(userData[key].latitude === place.geometry.location.lat() && \n        //              userData[key].longitude === place.geometry.location.lng()){\n        //              isStorexists = true;\n        //            }\n        //        });\n        //        if(isStorexists == false){\n        //          self.preferredStoresList.push({\n        //          store: item.description,\n        //          latitude: place.geometry.location.lat(),\n        //          longitude: place.geometry.location.lng(),\n        //          uid: firebase.auth().currentUser.uid\n        //        });\n        //        self.dismiss();\n        //        self.autocompleteItems = [];\n        //        }\n        //        else{\n        //          alert(\"Store already exist\");\n        //        }\n               \n                   \n        //        } else {\n        //      self.preferredStoresList.push({\n        //        store: item.description,\n        //        latitude: place.geometry.location.lat(),\n        //        longitude: place.geometry.location.lng(),\n        //        uid: firebase.auth().currentUser.uid\n        //      });\n        //      alert(\"Successfully added to preferred stores list\");\n        //      self.dismiss();\n        //      self.autocompleteItems = [];\n        //        }\n        //    }); \n               \n             }\n           });\n       \n     }\n     \n   }\n   dismiss() {\n     this.autocomplete.query = \"\";\n     \n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-preferred-store/add-preferred-store.ts"],"sourceRoot":""}